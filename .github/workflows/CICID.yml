name: Continuous Integration

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

permissions:
  contents: read
    
jobs:
  test-docker:
    name: Docker Tests
    runs-on: ubuntu-latest

    # Run a local registry to push to
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/hello-world-docer-action:latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Run the Container
        id: run
        env:
          INPUT_WHO_TO_GREET: Mona Lisa Octocat
        run: |
          docker run \
            --env INPUT_WHO_TO_GREET="${{ env.INPUT_WHO_TO_GREET }}" \
            --rm ${{ env.TEST_TAG }}

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          who-to-greet: Mona Lisa Octocat

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.time }}"

  work:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          # github action 默认签出只包含最后一次提交
          # 解决方案参考：https://stackoverflow.com/questions/62334460/git-history-in-a-github-action
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      # action中运行Docker的示例
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: aschmelyun/cleaver:latest
          options: -v ${{ github.workspace }}:/var/www
          run: |
            composer install
            npm install
            npm run production

      - name: Set up Python
        # 这是设置Python action的版本，不是Python的版本
        uses: actions/setup-python@v5
        with:
          python-version: '3.7' # 指定python版本
          # 可选 - x64 or x86 架构，默认为 x64
          architecture: 'x64'
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip requests gitpython
      - name: Launch Simulation
        run: python launch.py -t ${{ secrets.GITHUB_TOKEN }} # 执行

      # 触发行人论文的 action
      - name: Compile Pedestrian LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: pedestrian/undergraduate
          root_file: hutbthesis_main.tex
          texlive_version: 2023
          latexmk_use_xelatex: true
          # 下载安装Times New Roman字体
          pre_compile: |
            apk add msttcorefonts-installer fontconfig
            update-ms-fonts
            fc-cache -f

      # 触发强化学习论文的 action
      - name: Compile Reinforment Learning LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: rl/undergraduate
          root_file: hutbthesis_main.tex
          texlive_version: 2023
          latexmk_use_xelatex: true
          # 下载安装Times New Roman字体
          pre_compile: |
            apk add msttcorefonts-installer fontconfig
            update-ms-fonts
            fc-cache -f